/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
  IsNumber,
  Min,
  Max,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumJobJobType } from "./EnumJobJobType";
import { PaymentUpdateManyWithoutJobsInput } from "./PaymentUpdateManyWithoutJobsInput";
import { EnumJobStatus } from "./EnumJobStatus";
import { UberRequestUpdateManyWithoutJobsInput } from "./UberRequestUpdateManyWithoutJobsInput";

@InputType()
class JobUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignedWorker?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  client?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumJobJobType,
  })
  @IsEnum(EnumJobJobType)
  @IsOptional()
  @Field(() => EnumJobJobType, {
    nullable: true,
  })
  jobType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumJobStatus,
  })
  @IsEnum(EnumJobStatus)
  @IsOptional()
  @Field(() => EnumJobStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UberRequestUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => UberRequestUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => UberRequestUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  uberRequests?: UberRequestUpdateManyWithoutJobsInput;
}

export { JobUpdateInput as JobUpdateInput };
